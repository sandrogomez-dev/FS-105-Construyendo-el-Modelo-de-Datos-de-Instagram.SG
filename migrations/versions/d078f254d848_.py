"""empty message

Revision ID: d078f254d848
Revises: a5cffa318ac2
Create Date: 2025-06-03 17:36:08.361073

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd078f254d848'
down_revision = 'a5cffa318ac2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('Username', sa.String(length=80), nullable=False),
    sa.Column('Email', sa.String(length=120), nullable=False),
    sa.Column('PasswordHash', sa.String(length=255), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('UserID'),
    sa.UniqueConstraint('Email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_UserID'), ['UserID'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_Username'), ['Username'], unique=True)

    op.create_table('follows',
    sa.Column('FollowID', sa.Integer(), nullable=False),
    sa.Column('FollowerUserID', sa.Integer(), nullable=False),
    sa.Column('FollowingUserID', sa.Integer(), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['FollowerUserID'], ['users.UserID'], ),
    sa.ForeignKeyConstraint(['FollowingUserID'], ['users.UserID'], ),
    sa.PrimaryKeyConstraint('FollowID')
    )
    with op.batch_alter_table('follows', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_follows_FollowID'), ['FollowID'], unique=False)

    op.create_table('posts',
    sa.Column('PostID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('ImageURL', sa.String(length=255), nullable=False),
    sa.Column('Caption', sa.String(length=500), nullable=True),
    sa.Column('CreatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['UserID'], ['users.UserID'], ),
    sa.PrimaryKeyConstraint('PostID')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_posts_PostID'), ['PostID'], unique=False)

    op.create_table('comments',
    sa.Column('CommentID', sa.Integer(), nullable=False),
    sa.Column('PostID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('Content', sa.String(length=500), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['PostID'], ['posts.PostID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['users.UserID'], ),
    sa.PrimaryKeyConstraint('CommentID')
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comments_CommentID'), ['CommentID'], unique=False)

    op.create_table('likes',
    sa.Column('LikeID', sa.Integer(), nullable=False),
    sa.Column('PostID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['PostID'], ['posts.PostID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['users.UserID'], ),
    sa.PrimaryKeyConstraint('LikeID')
    )
    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_likes_LikeID'), ['LikeID'], unique=False)

    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('email', name=op.f('user_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_likes_LikeID'))

    op.drop_table('likes')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comments_CommentID'))

    op.drop_table('comments')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_posts_PostID'))

    op.drop_table('posts')
    with op.batch_alter_table('follows', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_follows_FollowID'))

    op.drop_table('follows')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_Username'))
        batch_op.drop_index(batch_op.f('ix_users_UserID'))

    op.drop_table('users')
    # ### end Alembic commands ###
